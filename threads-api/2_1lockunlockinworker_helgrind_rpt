==5610== Helgrind, a thread error detector
==5610== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==5610== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==5610== Command: ./main-race
==5610== 
==5610== error calling PR_SET_PTRACER, vgdb might block
==5610== ---Thread-Announcement------------------------------------------
==5610== 
==5610== Thread #1 is the program's root thread
==5610== 
==5610== ---Thread-Announcement------------------------------------------
==5610== 
==5610== Thread #2 was created
==5610==    at 0x499E282: clone (clone.S:71)
==5610==    by 0x48612EB: create_thread (createthread.c:101)
==5610==    by 0x4862E0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==5610==    by 0x4842917: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==5610==    by 0x1092AB: main (main-race.c:17)
==5610== 
==5610== ----------------------------------------------------------------
==5610== 
==5610==  Lock at 0x10C040 was first observed
==5610==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==5610==    by 0x109204: worker (main-race.c:9)
==5610==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==5610==    by 0x4862608: start_thread (pthread_create.c:477)
==5610==    by 0x499E292: clone (clone.S:95)
==5610==  Address 0x10c040 is 0 bytes inside data symbol "m"
==5610== 
==5610== Possible data race during read of size 4 at 0x10C068 by thread #1
==5610== Locks held: none
==5610==    at 0x1092CF: main (main-race.c:18)
==5610== 
==5610== This conflicts with a previous write of size 4 by thread #2
==5610== Locks held: 1, at address 0x10C040
==5610==    at 0x109231: worker (main-race.c:10)
==5610==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==5610==    by 0x4862608: start_thread (pthread_create.c:477)
==5610==    by 0x499E292: clone (clone.S:95)
==5610==  Address 0x10c068 is 0 bytes inside data symbol "balance"
==5610== 
==5610== ----------------------------------------------------------------
==5610== 
==5610==  Lock at 0x10C040 was first observed
==5610==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==5610==    by 0x109204: worker (main-race.c:9)
==5610==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==5610==    by 0x4862608: start_thread (pthread_create.c:477)
==5610==    by 0x499E292: clone (clone.S:95)
==5610==  Address 0x10c040 is 0 bytes inside data symbol "m"
==5610== 
==5610== Possible data race during write of size 4 at 0x10C068 by thread #1
==5610== Locks held: none
==5610==    at 0x1092D8: main (main-race.c:18)
==5610== 
==5610== This conflicts with a previous write of size 4 by thread #2
==5610== Locks held: 1, at address 0x10C040
==5610==    at 0x109231: worker (main-race.c:10)
==5610==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==5610==    by 0x4862608: start_thread (pthread_create.c:477)
==5610==    by 0x499E292: clone (clone.S:95)
==5610==  Address 0x10c068 is 0 bytes inside data symbol "balance"
==5610== 
==5610== 
==5610== Use --history-level=approx or =none to gain increased speed, at
==5610== the cost of reduced accuracy of conflicting-access information
==5610== For lists of detected and suppressed errors, rerun with: -s
==5610== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
